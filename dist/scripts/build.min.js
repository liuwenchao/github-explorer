"use strict";function loadChildren(e,t){var o="https://api.github.com/repos/"+tree.repo()+"/contents/";OAuth.request(t?t:o).success(function(t){monitorRate();for(var n=t.length-1;n>=0;n--){var i=t[n],r={name:i.name,link:o+i.path,type:i.type,path:i.path,open:ko.observable(!1),toggle:"file"===i.type?loadContent:toggleChildren,content:"file"===i.type?ko.observable():!1,postfix:"file"===i.type?i.name.substr(i.name.lastIndexOf(".")-i.name.length+1):"",children:ko.observableArray()};switch(i.type){case"dir":loadChildren(r,r.link);break;case"file":case"symlink":case"submodule":}e.children.push(r)}}).fail(function(){monitorRate(),tree.isLoggedIn(!1),window.alert("Path error or limit is reached for API calling.")})}window.OAuth=function(e){function t(t){var o=e.cookie("_token")?{Authorization:"token "+e.cookie("_token")}:{};return e.ajax(t,{headers:o,statusCode:{401:function(){console.error("Not authorized")},404:function(){console.error("Not authorized or Not Found")},500:function(){console.error("Applicaton Error")},201:function(){},204:function(){}}})}function o(){var t=window.prompt("Paste your Personal access token here, generate one at here: https://github.com/settings/applications");e.cookie("_token",t),location.reload()}function n(t){return t.state===r.state?e.ajax(r.access_token_url,{type:"POST",headers:{Accept:"application/json"},data:{client_id:r.client_id,client_secret:r.client_secret,code:t.code,redirect_url:location.origin+location.pathname},success:function(t){r.isLoggedIn=!0,e.cookie("_token",t.access_token)},error:function(e){console.error(e)}}):void console.error("not original state token?")}function i(){return t(r.rate_url)}var r={auth_url:"https://github.com/login/oauth/authorize",rate_url:"https://api.github.com/rate_limit",access_token_url:"https://github.com/login/oauth/access_token",client_id:"676ef133540d6b7d98b8",client_secret:"d3f69322e4954a56ac7d96b28086e3b9df10f801",redirect_url:window.location.href,scope:"repo",state:e.cookie("_state"),isLoggedIn:!1};return{config:r,login:o,postLogin:n,getRate:i,request:t}}(window.jQuery);var ko=window.ko,$=window.$,hljs=window.hljs,OAuth=window.OAuth,tree={repo:ko.observable("liuwenchao/aha-table"),viewing:ko.observable(),children:ko.observableArray(),reload:function(){return tree.viewing(void 0),tree.children.removeAll(),loadChildren(tree),!1},rate:{limit:ko.observable(),remaining:ko.observable(),reset:ko.observable()},login:OAuth.login,isLoggedIn:ko.observable(!1)},loadContent=function(){void 0===this.content()&&(OAuth.request(this.link).success(function(e){this.content(atob(e.content))}.bind(this)),monitorRate()),tree.viewing(this),this.open(!0),hljs.highlightBlock($("code")[0])},toggleChildren=function(){this.open(!this.open())},monitorRate=function(){OAuth.getRate().success(function(e){tree.rate.limit(e.rate.limit),tree.rate.remaining(e.rate.remaining);var t=new Date(1e3*e.rate.reset);tree.rate.reset(t.toLocaleTimeString()),tree.isLoggedIn(OAuth.config.isLoggedIn),0===e.rate.remaining&&tree.isLoggedIn(!1)})};$(document).ready(function(){if(window.location.search){var e=window.location.search.substr(1).split("&");OAuth.postLogin({code:e[0].split("=")[1],state:e[1].split("=")[1]}).always(function(){monitorRate(),loadChildren(tree)})}else monitorRate(),loadChildren(tree);ko.applyBindings(tree,document.body)});